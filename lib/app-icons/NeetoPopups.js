/** Icons generated by create-react-icons. Don't edit this file directly. **/
import React from "react";
import PropTypes from "prop-types";

export const NeetoPopups = ({ size, ...other }) => (
  <svg width={size} height={size} viewBox="0 0 40 40" fill="none" {...other}>
    <path
      d="M0 10.7731C0 4.82328 4.82328 0 10.7731 0H29.2269C35.1767 0 40 4.82328 40 10.7731V29.2269C40 35.1767 35.1767 40 29.2269 40H10.7731C4.82328 40 0 35.1767 0 29.2269V10.7731Z"
      fill="url(#paint0_linear_3502_440)"
    />
    <mask
      id="mask0_3502_440"
      style={{ maskType: "alpha" }}
      maskUnits="userSpaceOnUse"
      x="0"
      y="0"
      width="40"
      height="40"
    >
      <rect
        width="40"
        height="40"
        rx="10.7731"
        fill="url(#paint1_linear_3502_440)"
      />
    </mask>
    <g mask="url(#mask0_3502_440)">
      <path
        d="M37.4194 22.3657C37.4194 12.1514 29.1391 3.87109 18.9248 3.87109H0.430176V40.8603H37.4194V22.3657Z"
        fill="url(#paint2_linear_3502_440)"
      />
    </g>
    <g filter="url(#filter0_d_3502_440)">
      <path
        d="M19.9415 30.6432L17.7778 28.538H22.1053L19.9415 30.6432Z"
        fill="white"
      />
      <path
        d="M19.9415 11.228C24.7538 11.228 28.655 15.1292 28.655 19.9415V28.6549H11.2281V11.228H19.9415ZM16.0234 17.3099C15.765 17.3099 15.5556 17.5194 15.5556 17.7777C15.5556 18.0361 15.765 18.2456 16.0234 18.2456H23.7427C24.0011 18.2456 24.2105 18.0361 24.2105 17.7777C24.2105 17.5194 24.0011 17.3099 23.7427 17.3099H16.0234ZM15.5556 20C15.5556 19.7416 15.765 19.5321 16.0234 19.5321H23.7427C24.0011 19.5321 24.2105 19.7416 24.2105 20C24.2105 20.2583 24.0011 20.4678 23.7427 20.4678H16.0234C15.765 20.4678 15.5556 20.2583 15.5556 20ZM16.0234 21.8713C15.765 21.8713 15.5556 22.0808 15.5556 22.3391C15.5556 22.5975 15.765 22.807 16.0234 22.807H19.7661C20.0245 22.807 20.2339 22.5975 20.2339 22.3391C20.2339 22.0808 20.0245 21.8713 19.7661 21.8713H16.0234Z"
        fill="white"
        fillRule="evenodd"
        clipRule="evenodd"
      />
    </g>
    <defs>
      <filter
        id="filter0_d_3502_440"
        x="11.2281"
        y="11.228"
        width="18.1286"
        height="20.2339"
        filterUnits="userSpaceOnUse"
        colorInterpolationFilters="sRGB"
      >
        <feFlood result="BackgroundImageFix" floodOpacity="0" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dx="0.350877" dy="0.467836" />
        <feGaussianBlur stdDeviation="0.175439" />
        <feComposite in2="hardAlpha" operator="out" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.05 0"
        />
        <feBlend
          mode="normal"
          in2="BackgroundImageFix"
          result="effect1_dropShadow_3502_440"
        />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="effect1_dropShadow_3502_440"
          result="shape"
        />
      </filter>
      <linearGradient
        id="paint0_linear_3502_440"
        x1="-15.876"
        y1="-21.8295"
        x2="54.2818"
        y2="58.3092"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#3EA8CA" />
        <stop offset="1" stopColor="#59B9EF" />
      </linearGradient>
      <linearGradient
        id="paint1_linear_3502_440"
        x1="-2.80164"
        y1="-2.27633"
        x2="37.2385"
        y2="61.1108"
        gradientUnits="userSpaceOnUse"
      >
        <stop offset="1" stopColor="#FFD55C" />
      </linearGradient>
      <linearGradient
        id="paint2_linear_3502_440"
        x1="32.2489"
        y1="9.63823"
        x2="0.430175"
        y2="40.8603"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="white" stopOpacity="0.16" />
        <stop offset="0.53125" stopColor="white" stopOpacity="0" />
      </linearGradient>
    </defs>
  </svg>
);

NeetoPopups.defaultProps = { size: 24 };

NeetoPopups.propTypes = {
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
};
